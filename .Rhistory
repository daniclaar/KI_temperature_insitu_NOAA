load("data/KI_SB_temp_1hr.RData")
# The first date that we want to interpolate from
startDate <- as.POSIXct("2011/1/1 00:00:00",format="%Y/%m/%d %H:%M:%S",tz="Pacific/Kiritimati")
# The last date that we want to interpolate to
endDate <- as.POSIXct("2016/12/31 23:59:00",format="%Y/%m/%d %H:%M:%S",tz="Pacific/Kiritimati")
xi3 <- (seq(from=startDate, to= endDate, by=24))
# Create a list regions for reference later
regions=c("southlagoon","northlagoon","lagoonface","northshore","bayofwrecks","vaskesbay")
# Create a list of sites for reference later
sitelist <- c("site3","site5","site8","site8.5","site9","site15","site19","site25","site27","site30","site32","site33","site34","site35","site40")
View(site3_1hr)
## Now do the actual interpolation
## Use DateTime to interpolate Temperature over xi. Don't remove NA values. The maximum gap (sequence of NAs) to interpolate over is 10800 seconds or 3 hours
# List all loggers for use in loop
logger <- grep("site",ls(),value=TRUE)
logger
logger[-c("sitelist")]
str(logger)
logger[1:15]
## Now do the actual interpolation
## Use DateTime to interpolate Temperature over xi. Don't remove NA values. The maximum gap (sequence of NAs) to interpolate over is 10800 seconds or 3 hours
# List all loggers for use in loop
logger <- grep("site",ls(),value=TRUE)
logger
logger <- logger[!(logger %in% "sitelist")]
logger
# For every logger, create and evaluate a string of form:
# loggername_interp <- na.interp(loggername$DateTime, loggername$Temperature, xi, na.rm=FALSE, maxgap=10800)
for (i in 1:length(logger)) {
evalstr<-paste((logger[i]),"_interp <- ","na.interp1(", logger[i], "$DateTime,",logger[i],"$Temperature, xi, na.rm=FALSE, maxgap=10800)",sep="")
eval(parse(text=evalstr))
}
library(iemisc)
install.packages("iemmisc")
install.packages("iemisc")
install.packages("iemisc")
library(iemisc)
library(iemisc)
library(iemisc)
